---
import BaseLayout from "../layouts/baseLayout.astro";
import categories from "../data/profileCategories.json";
import Toast from "../components/toast/toast.astro";
import CardLink from "../components/forms/cardLink.astro";
import Tooltip from "../components/ui/tooltip.astro";
import CreateRepoModal from "../components/modals/createRepoModal.astro";
import ChangeRepoNameModal from "../components/modals/changeRepoNameModal.astro";
import "../styles/main.css";

let categoriesList = [];
for (const key in categories) {
  categories[key].key = key;
  categoriesList.push(categories[key]);
}
---

<BaseLayout
  title="Perfil"
  description="Destaca tus habilidades y logros en la industria de la programación con tu perfil en Cucoders. Comparte tu rurriculo, servicios, proyectos y apps con la comunidad."
>
  <div class="lg:max-w-[58rem] mx-auto w-full md:mt-12">
    <div
      id="alert"
      class="flex p-4 text-sm mb-6 text-yellow-800 border border-yellow-300 rounded-lg bg-yellow-50 dark:bg-gray-800 dark:text-yellow-400 dark:border-yellow-800"
      role="alert"
    >
      <svg
        aria-hidden="true"
        class="flex-shrink-0 inline w-5 h-5 mr-3"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          fill-rule="evenodd"
          d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
          clip-rule="evenodd"></path></svg
      >
      <span class="sr-only">Info</span>
      <div>Los cambios realizados en el perfil tardan 24h en ser reflejados en el sitio web de CuCoders.</div>
      <button
        type="button"
        class="ml-auto -mx-1.5 -my-1.5 bg-yellow-50 text-yellow-500 rounded-lg focus:ring-2 focus:ring-yellow-400 p-1.5 hover:bg-yellow-200 inline-flex h-8 w-8 dark:bg-gray-800 dark:text-yellow-300 dark:hover:bg-gray-700"
        data-dismiss-target="#alert"
        aria-label="Close"
      >
        <span class="sr-only">Close</span>
        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"
          ><path
            fill-rule="evenodd"
            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
            clip-rule="evenodd"></path></svg
        >
      </button>
    </div>
  </div>

  <div
    class="bg-white border mb-6 md:mx-auto p-8 lg:max-w-[58rem] border-gray-200 rounded-lg dark:bg-gray-800 dark:border-gray-700 w-full"
  >
    <div>
      <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">GitHub</label>
      <div class="flex">
        <span
          class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
        >
          @
        </span>
        <input
          type="text"
          id="username"
          class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
          placeholder="Nombre de Usuario"
        />
        <button
          id="loadUserBtn"
          class="text-white disabled:opacity-50 w-auto ml-5 bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:outline-none focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center flex content-center justify-center items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 mr-2"
        >
          <svg
            id="spinner-ico"
            aria-hidden="true"
            role="status"
            class="hidden w-4 h-4 mr-2 text-white animate-spin"
            viewBox="0 0 100 101"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
              fill="#E5E7EB"></path>
            <path
              d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
              fill="currentColor"></path>
          </svg>
          <svg
            id="github-ico"
            class="w-4 h-4 mr-2"
            aria-hidden="true"
            focusable="false"
            data-prefix="fab"
            data-icon="github"
            role="img"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 496 512"
            ><path
              fill="currentColor"
              d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"
            ></path></svg
          >
          Cargar</button
        >
      </div>
    </div>
  </div>

  <div
    id="profile-form"
    class="bg-white hidden border md:mx-auto mb-5 p-8 lg:max-w-[58rem] border-gray-200 rounded-lg dark:bg-gray-800 dark:border-gray-700 w-full"
  >
    <div class="flex justify-between">
      <h1 class="text-xl font-bold">Datos de Github</h1>

      <div class="flex">
        <img
          id="reloadGithubData"
          data-tooltip-target="tooltip-reload"
          src="/assets/img/icons/reload.svg"
          alt="Recargar Datos"
          class="w-7 h-7 cursor-pointer mx-3"
        />
        <img
          src="/assets/img/icons/sharp-help-outline.svg"
          alt="Ayuda"
          class="w-7 h-7 cursor-pointer mx-3"
          data-popover-target="popover-default"
        />
      </div>
    </div>

    <Tooltip id="tooltip-reload" text="Recargar datos" />

    <div
      data-popover
      id="popover-default"
      role="tooltip"
      class="absolute z-10 invisible inline-block w-64 text-sm font-light text-gray-500 transition-opacity duration-300 bg-white border border-gray-200 rounded-lg shadow-sm opacity-0 dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800"
    >
      <div class="px-3 py-2 bg-gray-100 border-b border-gray-200 rounded-t-lg dark:border-gray-600 dark:bg-gray-700">
        <h3 class="font-semibold text-gray-900 dark:text-white">Datos de GitHub</h3>
      </div>
      <div class="px-3 py-2">
        <p>
          Estos datos se obtienen de tu perfil de GitHub,
          <a class="underline" href="https://github.com/settings/profile" target="_blank">actualízalos</a> y luego recargarlos
          aquí.
        </p>
      </div>
      <div data-popper-arrow></div>
    </div>

    <hr class="my-4" />

    <input type="hidden" id="user-id" />

    <div>
      <div class="grid gap-6 mb-6 md:grid-cols-2">
        <div>
          <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
          <input
            type="text"
            id="name"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div>
          <label for="location" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Ubicación</label>
          <input
            type="text"
            id="location"
            maxlength="25"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>

        <div>
          <label for="twitter-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Twitter</label>
          <div class="flex opacity-50">
            <span
              class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
            >
              @
            </span>
            <input
              type="text"
              id="twitter-username"
              disabled
              class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            />
          </div>
        </div>
        <div>
          <label for="github-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">GitHub</label>
          <div class="flex opacity-50">
            <span
              class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
            >
              @
            </span>
            <input
              type="text"
              id="github-username"
              disabled
              class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            />
          </div>
        </div>
        <div>
          <label for="company" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Compañia</label>
          <input
            type="text"
            id="company"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div>
          <label for="website" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Website URL</label>
          <input
            type="url"
            id="website"
            class="bg-gray-50 border border-gray-300 opacity-50 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            disabled
          />
        </div>
        <div class="flex items-center">
          <input
            id="hireable"
            type="checkbox"
            value=""
            disabled
            class="w-4 h-4 text-gray-600 opacity-50 bg-gray-100 border-gray-300 rounded focus:ring-gray-500 dark:focus:ring-gray-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
          />
          <label for="default-checkbox" class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">Open to Work</label
          >
        </div>
      </div>
      <div class="mb-6">
        <label for="bio" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Bio</label>
        <textarea
          id="bio"
          maxlength="160"
          disabled
          rows="2"
          class="block p-2.5 w-full text-sm opacity-50 text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        ></textarea>
      </div>
    </div>

    <div class="flex justify-between">
      <h1 class="text-xl font-bold">Datos de CuCoders</h1>
    </div>

    <hr class="my-4" />

    <div class="mb-6">
      <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email Público</label>
      <input
        type="email"
        id="email"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
      />
    </div>

    <div class="mb-6">
      <label for="headline" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Encabezado</label>
      <input
        type="text"
        id="headline"
        maxlength="35"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
        placeholder="Software Engineer"
      />
    </div>

    <div class="mb-6">
      <label for="message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Categorias</label>
      <select id="categories" name="state[]" multiple placeholder="Categorias" autocomplete="off">
        <option value="">Select a state...</option>
        {categoriesList.map((category) => <option value={category.key}>{category.text}</option>)}
      </select>
    </div>

    <div class="grid gap-6 mb-6 md:grid-cols-2">
      <div>
        <label for="telegram-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Telegram</label>
        <div class="flex">
          <span
            class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
          >
            @
          </span>
          <input
            type="text"
            id="telegram-username"
            class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            placeholder="Nombre de Usuario"
          />
        </div>
      </div>
      <div>
        <label for="linkedin-username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Linkedin</label>
        <div class="flex">
          <span
            class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
          >
            @
          </span>
          <input
            type="text"
            id="linkedin-username"
            class="rounded-none rounded-r-lg bg-gray-50 border text-gray-900 focus:ring-gray-500 focus:border-gray-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
            placeholder="Nombre de Usuario"
          />
        </div>
      </div>
    </div>

    <div class="flex justify-center">
      <button
        id="createProfile"
        class="text-white mt-4 mx-2 bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
        >Crear Perfil</button
      >
      <div id="edit-profile-btns" class="w-full sm:w-auto hidden">
        <button
          id="copyData"
          type="button"
          class="text-gray-900 w-full sm:mx-2 sm:w-auto bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2 -ml-1 inline" viewBox="0 0 24 24"
            ><path
              fill="currentColor"
              d="M9 18q-.825 0-1.412-.587Q7 16.825 7 16V4q0-.825.588-1.413Q8.175 2 9 2h9q.825 0 1.413.587Q20 3.175 20 4v12q0 .825-.587 1.413Q18.825 18 18 18Zm0-2h9V4H9v12Zm-4 6q-.825 0-1.413-.587Q3 20.825 3 20V7q0-.425.288-.713Q3.575 6 4 6t.713.287Q5 6.575 5 7v13h10q.425 0 .713.288q.287.287.287.712t-.287.712Q15.425 22 15 22ZM9 4v12V4Z"
            ></path></svg
          >
          Copiar Datos</button
        >
        <button
          id="updateProfile"
          class="text-white mt-4 w-full sm:mx-2 sm:w-auto bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
          >Actualizar Perfil</button
        >
      </div>
    </div>
  </div>

  <div id="profile-pages" class="hidden w-full gap-6 md:grid-cols-2 lg:max-w-[58rem] mx-auto px-3 sm:px-0">
    <CardLink title="🧑‍💻 Perfil" subtitle="Resumen general de tu perfil" id="overview" target="_blank" />
    <CardLink title="💼 Servicios" subtitle="Lista los servicios que ofreces" id="services" target="_blank" />
    <CardLink title="💡 Proyectos" subtitle="Todos tus proyectos en una sola pagina" id="projects" target="_blank" />
    <CardLink title="📃 Currículo" subtitle="Resume tu experiencia, formación y aptitudes." id="resume" target="_blank" />
  </div>

  <Toast />
  <CreateRepoModal />
  <ChangeRepoNameModal />
</BaseLayout>

<link href="https://cdn.jsdelivr.net/npm/tom-select/dist/css/tom-select.css" rel="stylesheet" />
<script is:inline src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>

<script is:inline>
  var control = new TomSelect("#categories", {});
</script>

<script>
  import { backend_url } from "../data/conf.json";
  import { showToast } from "../components/toast/toast";
  import { Modal } from "flowbite";
  import { getRemoteFileData } from "../components/helpers/getRemoteFile";
  import * as overviewTemplate from "../templates/overview.md";
  import * as servicesTemplate from "../templates/services.md";
  import * as projectsTemplate from "../templates/projects.md";
  import * as resumeTemplate from "../templates/resume.md";

  const proflieBtn = document.getElementById("createProfile");
  proflieBtn.addEventListener("click", createProfile, true);

  const loadUserBtn = document.getElementById("loadUserBtn");
  loadUserBtn.addEventListener("click", loadUserData, true);

  const reloadBtn = document.getElementById("reloadGithubData");
  reloadBtn.addEventListener("click", loadUserData, true);

  const copyDataBtn = document.getElementById("copyData");
  copyDataBtn.addEventListener("click", copyToClipboard, true);

  const updateBtn = document.getElementById("updateProfile");
  updateBtn.addEventListener("click", updateProfile, true);

  const continueBtn = document.getElementById("continue-btn");
  continueBtn.addEventListener("click", continueCreateRepoForm, true);

  const closeModalBtn = document.getElementById("close-modal-btn");
  closeModalBtn.addEventListener("click", closeCreateRepoForm, true);

  const continueBranchBtn = document.getElementById("continue-branch-btn");
  continueBranchBtn.addEventListener("click", continueBranchForm, true);

  const closeBranchModalBtn = document.getElementById("close-branch-modal-btn");
  closeBranchModalBtn.addEventListener("click", closeBranchForm, true);

  const $repoModalEl = document.getElementById("repoModal");
  const repoModal = new Modal($repoModalEl, { placement: "center", backdrop: "static", closable: true });

  const $branchModalEl = document.getElementById("branchModal");
  const branchModal = new Modal($branchModalEl, { placement: "center", backdrop: "static", closable: true });

  async function loadUserData() {
    const username = (<HTMLInputElement>document.getElementById("username")).value;

    disableInput();
    const isMember = await isCommunityMemeber(username);
    if (!isMember) {
      const alert = `El usuario ${username} no es miembro de la Comunidad. Necesitas registrarte primero para actualizar tu perfil.`;
      showToast(alert, true);
      enableInput();
      return;
    }
    const specialRepo = await isSpecialRepoAvailable(username);
    if (!specialRepo) {
      repoModal.show();
      enableInput();
      return;
    }

    const mainBranch = await isMainBranch(username);
    if (!mainBranch) {
      const new_url = `https://github.com/${username}/${username}/branches`;
      (<HTMLInputElement>document.getElementById("change-branch-name-btn")).setAttribute("href", new_url);
      branchModal.show();
      enableInput();
      return;
    }

    loadGithubUserData(username);
    loadCucodersUserData(username);
  }

  async function isCommunityMemeber(username) {
    const url = backend_url + "api/members/is-member?username=" + username;
    try {
      const response = await fetch(url, { method: "GET" });
      const data = await response.json();
      return data.is_member;
    } catch {
      return false;
    }
  }

  async function isSpecialRepoAvailable(username) {
    const url = `https://api.github.com/repos/${username}/${username}`;
    try {
      const response = await fetch(url, { method: "GET" });
      const status = await response.status;
      if (status == 404) return false;

      return true;
    } catch {
      return false;
    }
  }

  async function isMainBranch(username) {
    const url = backend_url + "api/members/has-main-branch?username=" + username;
    try {
      const response = await fetch(url, { method: "GET" });
      const data = await response.json();
      return data.has_main_branch;
    } catch {
      return false;
    }
  }

  function loadGithubUserData(username) {
    fetch("https://api.github.com/users/" + username, {
      method: "GET",
    })
      .then((response) => response.json())
      .then((data) => {
        setFormData(data);
        enableInput();
        showForm();
        setProfilePagesLinks(username);
        showToast("Datos de usuario cargados satisfactoriamente.");
      })
      .catch((e) => {
        showToast("Ocurrió un error inesperado. Por favor vuelva a intentarlo más tarde.", true);
        enableInput();
      });
  }

  function continueCreateRepoForm() {
    repoModal.hide();
    loadUserData();
  }

  function closeCreateRepoForm() {
    repoModal.hide();
  }

  function continueBranchForm() {
    branchModal.hide();
    loadUserData();
  }

  function closeBranchForm() {
    branchModal.hide();
  }

  async function loadCucodersUserData(username) {
    const data = await getRemoteFileData(
      `https://raw.githubusercontent.com/${username}/${username}/main/cucoders_data/profile-data.json`,
      "json"
    );
    if (data) {
      cuCodersFormData(data);
      (<HTMLInputElement>document.getElementById("edit-profile-btns")).classList.remove("hidden");
      (<HTMLInputElement>document.getElementById("createProfile")).classList.add("hidden");
    }
  }

  function setFormData(data) {
    (<HTMLInputElement>document.getElementById("name")).value = data.name;
    (<HTMLInputElement>document.getElementById("location")).value = data.location;
    (<HTMLInputElement>document.getElementById("twitter-username")).value = data.twitter_username;
    (<HTMLInputElement>document.getElementById("github-username")).value = data.login;
    (<HTMLInputElement>document.getElementById("company")).value = data.company;
    (<HTMLInputElement>document.getElementById("website")).value = data.blog;
    (<HTMLInputElement>document.getElementById("hireable")).checked = data.hireable;
    (<HTMLInputElement>document.getElementById("bio")).value = data.bio;
    (<HTMLInputElement>document.getElementById("user-id")).value = data.id;
  }

  function cuCodersFormData(data) {
    (<HTMLInputElement>document.getElementById("email")).value = data.email;
    (<HTMLInputElement>document.getElementById("headline")).value = data.headline;
    (<HTMLInputElement>document.getElementById("linkedin-username")).value = data.linkedin_username;
    (<HTMLInputElement>document.getElementById("telegram-username")).value = data.telegram_username;
    // TODO: Buscar alguna manera de cargar de este lado los datos del select multiple
  }

  function showForm() {
    (<HTMLInputElement>document.getElementById("profile-form")).classList.remove("hidden");
    (<HTMLInputElement>document.getElementById("profile-pages")).classList.remove("hidden");
    (<HTMLInputElement>document.getElementById("profile-pages")).classList.add("grid");
  }

  function disableInput() {
    (<HTMLInputElement>document.getElementById("reloadGithubData")).setAttribute("disabled", "");
    (<HTMLInputElement>document.getElementById("reloadGithubData")).classList.add("animate-spin");
    (<HTMLInputElement>document.getElementById("loadUserBtn")).setAttribute("disabled", "");
    (<HTMLInputElement>document.getElementById("spinner-ico")).classList.remove("hidden");
    (<HTMLInputElement>document.getElementById("spinner-ico")).classList.add("inline");
    (<HTMLInputElement>document.getElementById("github-ico")).classList.add("hidden");
  }

  function enableInput() {
    (<HTMLInputElement>document.getElementById("reloadGithubData")).removeAttribute("disabled");
    (<HTMLInputElement>document.getElementById("reloadGithubData")).classList.remove("animate-spin");
    (<HTMLInputElement>document.getElementById("loadUserBtn")).removeAttribute("disabled");
    (<HTMLInputElement>document.getElementById("spinner-ico")).classList.add("hidden");
    (<HTMLInputElement>document.getElementById("spinner-ico")).classList.remove("inline");
    (<HTMLInputElement>document.getElementById("github-ico")).classList.remove("hidden");
  }

  function createProfile() {
    const username = (<HTMLInputElement>document.getElementById("github-username")).value;
    const data = createProfileData();
    const encodedFileData = encodeURIComponent(JSON.stringify(data));
    const githubQueryLink = `https://github.com/${username}/${username}/new/main/cucoders_data/new?value=${encodedFileData}&filename=profile-data.json`;
    window.open(githubQueryLink);
  }

  function updateProfile() {
    const username = (<HTMLInputElement>document.getElementById("github-username")).value;
    const githubQueryLink = `https://github.com/${username}/${username}/edit/main/cucoders_data/profile-data.json`;
    window.open(githubQueryLink);
  }

  function createProfileData() {
    const data = {
      username: (<HTMLInputElement>document.getElementById("github-username")).value,
      id: (<HTMLInputElement>document.getElementById("user-id")).value,
      name: (<HTMLInputElement>document.getElementById("name")).value,
      company: (<HTMLInputElement>document.getElementById("company")).value,
      web: (<HTMLInputElement>document.getElementById("website")).value,
      location: (<HTMLInputElement>document.getElementById("location")).value,
      email: (<HTMLInputElement>document.getElementById("email")).value,
      hireable: (<HTMLInputElement>document.getElementById("hireable")).checked,
      bio: (<HTMLInputElement>document.getElementById("bio")).value,
      twitter_username: (<HTMLInputElement>document.getElementById("twitter-username")).value,
      headline: (<HTMLInputElement>document.getElementById("headline")).value,
      linkedin_username: (<HTMLInputElement>document.getElementById("linkedin-username")).value,
      telegram_username: (<HTMLInputElement>document.getElementById("telegram-username")).value,
    };

    var categories = [];
    for (let option of (<HTMLSelectElement>document.getElementById("categories")).options) {
      if (option.selected) {
        categories.push(option.value);
      }
    }
    data["categories"] = categories;
    return data;
  }

  function copyToClipboard() {
    const profileData = createProfileData();
    navigator.clipboard.writeText(JSON.stringify(profileData));
    const alert =
      "Datos copiados al portapapeles satisfactoriamente! Abra su configuración en Github y remplácela con los nuevos datos.";
    showToast(alert);
  }

  function setProfilePagesLinks(username) {
    setLinkAttr(username, "overview", "overview.md", overviewTemplate.rawContent());
    setLinkAttr(username, "services", "services.md", servicesTemplate.rawContent());
    setLinkAttr(username, "projects", "projects.md", projectsTemplate.rawContent());
    setLinkAttr(username, "resume", "resume.md", resumeTemplate.rawContent());
  }

  async function setLinkAttr(username, id, file_name, newFileContent = "") {
    const encodedFileData = encodeURIComponent(newFileContent);
    let rawUrl = `https://raw.githubusercontent.com/${username}/${username}/main/cucoders_data/${file_name}`;
    let newUrl = `https://github.com/${username}/${username}/new/main/cucoders_data/new?value=${encodedFileData}&filename=${file_name}`;
    let editUrl = `ttps://github.com/${username}/${username}/edit/main/cucoders_data/${file_name}`;

    if (id == "overview") {
      rawUrl = `https://raw.githubusercontent.com/${username}/${username}/main/README.md`;
      newUrl = `https://github.com/${username}/${username}/new/main/new?value=${encodedFileData}&filename=README.md`;
      editUrl = `https://github.com/${username}/${username}/edit/main/README.md`;
    }

    const file = await getRemoteFileData(rawUrl, "text");
    if (file) {
      document.getElementById(id).setAttribute("href", editUrl);
    } else {
      document.getElementById(id).setAttribute("href", newUrl);
    }
  }
</script>
